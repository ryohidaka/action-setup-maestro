name: "Setup Maestro"

author: "ryohidaka"

description: "GitHub Actions to setup Maestro CLI."

branding:
  color: green
  icon: send

inputs:
  version:
    description: Maestro version to install (e.g., 1.41.0). If empty, installs latest.
    required: false
    default: ""
  cache:
    description: Whether to cache Maestro CLI (true/false)
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Restore Maestro cache
      if: inputs.cache == 'true'
      id: restore-maestro-cache
      uses: actions/cache@v4
      with:
        path: ~/.maestro
        key: ${{ runner.os }}-maestro-${{ inputs.version || 'latest' }}

    - name: Check if Maestro CLI exists
      id: check-maestro
      shell: bash
      run: |
        if [ -x "$HOME/.maestro/bin/maestro" ]; then
          echo "cached=true" >> $GITHUB_OUTPUT
        else
          echo "cached=false" >> $GITHUB_OUTPUT
        fi

    - name: Install Maestro CLI
      if: steps.check-maestro.outputs.cached == 'false'
      shell: bash
      run: |
        # Determine Maestro version to install
        if [ -n "${{ inputs.version }}" ]; then
          echo "::notice::Installing Maestro CLI version ${{ inputs.version }}"
          export MAESTRO_VERSION="${{ inputs.version }}"
        else
          echo "::notice::Installing latest Maestro CLI"
        fi

        # Install Maestro CLI
        curl -Ls "https://get.maestro.mobile.dev" | bash

    - name: Add Maestro to PATH
      shell: bash
      run: echo "$HOME/.maestro/bin" >> $GITHUB_PATH

    - name: Show Maestro version
      shell: bash
      run: |
        echo "::notice::Maestro version:"
        maestro --version

    - name: Save Maestro cache
      if: inputs.cache == 'true' && steps.check-maestro.outputs.cached == 'false'
      uses: actions/cache@v4
      with:
        path: ~/.maestro
        key: ${{ runner.os }}-maestro-${{ inputs.version || 'latest' }}
